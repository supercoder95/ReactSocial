{"ast":null,"code":"var _jsxFileName = \"/Users/supercoder/develop/reactSocial/prepare/front/components/PostImages.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { useCallback, useState } from 'react';\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImageZoom,\n    1: setShowImageZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImageZoom(true);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      role: \"presentation\",\n      src: images[0].src,\n      alt: image[0].src,\n      onClick: onZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object)\n};\nexport default PostImages;","map":{"version":3,"sources":["/Users/supercoder/develop/reactSocial/prepare/front/components/PostImages.js"],"names":["PropTypes","useCallback","useState","PostImages","images","showImageZoom","setShowImageZoom","onZoom","length","src","image","propTypes","arrayOf","object"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCJ,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMK,MAAM,GAAGN,WAAW,CAAC,MAAM;AAC/BK,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFyB,EAEvB,EAFuB,CAA1B;;AAIA,MAAIF,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WACE,4BACE;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAFjB;AAGE,MAAA,GAAG,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASD,GAHhB;AAIE,MAAA,OAAO,EAAEF,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;AACF,CAnBD;;AAqBAJ,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,MAAM,EAAEJ,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,MAA5B;AADa,CAAvB;AAIA,eAAeV,UAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useCallback, useState } from 'react';\n\nconst PostImages = ({ images }) => {\n  const [showImageZoom, setShowImageZoom] = useState(false);\n\n  const onZoom = useCallback(() => {\n    setShowImageZoom(true);\n  }, []);\n\n  if (images.length === 1) {\n    return (\n      <>\n        <img\n          role=\"presentation\"\n          src={images[0].src}\n          alt={image[0].src}\n          onClick={onZoom}\n        />\n      </>\n    );\n  }\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default PostImages;\n"]},"metadata":{},"sourceType":"module"}
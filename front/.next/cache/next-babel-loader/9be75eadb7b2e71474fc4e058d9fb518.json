{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'supercoder'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스페리스',\n    Images: [{\n      src: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cow_%28Fleckvieh_breed%29_Oeschinensee_Slaunger_2009-07-07.jpg'\n    }, {\n      src: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cow_%28Fleckvieh_breed%29_Oeschinensee_Slaunger_2009-07-07.jpg'\n    }, {\n      src: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cow_%28Fleckvieh_breed%29_Oeschinensee_Slaunger_2009-07-07.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'hypercoder'\n      },\n      content: 'hello world'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  User: {\n    id: 1,\n    nickname: 'HyperCoder'\n  },\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/supercoder/develop/reactSocial/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,uBANX;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EAAE;AADP,KADM,EAIN;AACEA,MAAAA,GAAG,EAAE;AADP,KAJM,EAON;AACEA,MAAAA,GAAG,EAAE;AADP,KAPM,CAPV;AAkBEC,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ;AAlBZ,GADS,CADe;AA8B1BI,EAAAA,UAAU,EAAE,EA9Bc;AA+B1BC,EAAAA,SAAS,EAAE;AA/Be,CAArB;AAkCP,MAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAGP,MAAMG,SAAS,GAAG;AAChBX,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GADU;AAKhBE,EAAAA,MAAM,EAAE,EALQ;AAMhBE,EAAAA,QAAQ,EAAE;AANM,CAAlB;;AASA,MAAMO,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKF,QAAL;AACE,6CACKK,KADL;AAEEf,QAAAA,SAAS,EAAE,CAACa,SAAD,EAAY,GAAGE,KAAK,CAACf,SAArB,CAFb;AAGES,QAAAA,SAAS,EAAE;AAHb;;AAKF;AACE,aAAOM,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: 'supercoder',\n      },\n      content: '첫 번째 게시글 #해시태그 #익스페리스',\n      Images: [\n        {\n          src: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cow_%28Fleckvieh_breed%29_Oeschinensee_Slaunger_2009-07-07.jpg',\n        },\n        {\n          src: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cow_%28Fleckvieh_breed%29_Oeschinensee_Slaunger_2009-07-07.jpg',\n        },\n        {\n          src: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cow_%28Fleckvieh_breed%29_Oeschinensee_Slaunger_2009-07-07.jpg',\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: 'hypercoder',\n          },\n          content: 'hello world',\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  postAdded: false,\n};\n\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST,\n};\nconst dummyPost = {\n  User: {\n    id: 1,\n    nickname: 'HyperCoder',\n  },\n  Images: [],\n  Comments: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}